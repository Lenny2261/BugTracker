@model BugTracker.Models.TicketDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<h2>@Html.DisplayFor(model => model.tickets.title)</h2>

<div>
    <h4>Ticket Details</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Description
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tickets.description)
        </dd>

        <dt>
            Assigned Employee
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tickets.Assigned.firstName) @Html.DisplayFor(model => model.tickets.Assigned.lastName)
        </dd>

        <dt>
            Owner of Ticket
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tickets.Owner.firstName) @Html.DisplayFor(model => model.tickets.Owner.lastName)
        </dd>

        <dt>
            Project
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tickets.Project.name)
        </dd>

        <dt>
            Priority
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tickets.TicketPriority.name)
        </dd>

        <dt>
            Status
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tickets.TicketStatus.name)
        </dd>

        <dt>
            Type
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tickets.TicketType.name)
        </dd>
    </dl>
    <div>
        @{
            var createdBlog = Model.tickets.created.ToString().Split(' ');
            var updatedBlog = Model.tickets.updated.ToString().Split(' ');
        }
        <div style="float: left;"><b>Created:</b> @createdBlog[0] @createdBlog[1] @createdBlog[2]</div>
        @if (Model.tickets.updated != null)
        {
            <div style="float: right;"><b>Updated:</b> @updatedBlog[0] @updatedBlog[1] @updatedBlog[2]</div>
        }
    </div>

    <br />
    <br />
    @if (Model.tickets.AssignedId == Model.user.Id || Model.tickets.OwnerId == Model.user.Id || User.IsInRole("ProjectManager") && Model.tickets.Project.projectUsers.Select(p => p.Id).Contains(Model.user.Id))
    {
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.tickets.Id })
        </p>
    }
    <br />
    <br />
    <div>
        @if (Model.tickets.AssignedId == Model.user.Id || Model.tickets.OwnerId == Model.user.Id ||
    User.IsInRole("ProjectManager") && Model.tickets.Project.projectUsers.Select(p => p.Id).Contains(Model.user.Id) || User.IsInRole("Admin"))
        {
            <div class="post-comment" id="testTap">
                @using (Html.BeginForm("Create", "TicketComments", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <div class="col-md-12 ridOfLeft">
                            <div class="blog-content">
                                <button class="btn btn-dafault btn-details" type="submit">Comment</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        </div>

